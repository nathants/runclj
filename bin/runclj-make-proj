#!/bin/bash
set -euo pipefail
filepath=$1
root=$(runclj-root $filepath)

package-json() {
npm=$(runclj-meta $filepath :npm 2>/dev/null | python3 -c 'import sys, json; print(json.dumps(dict([x[1:-1].replace("\"", "").split(None, 1) for x in sys.stdin.read().splitlines()])))')
ns=$(runclj-meta $filepath :ns)
cat <<EOF
{
  "name": "${ns}",
  "version": "0.0.1",
  "private": true,
  "devDependencies": {
    "shadow-cljs": "^2",
    "http-server": "^14"
  },
  "dependencies": ${npm}
}
EOF
}

browser-project() {
ns=$(runclj-meta $filepath :ns)
deps=$(runclj-meta $filepath :deps 2>/dev/null)
cat <<EOF
{:source-paths ["src/main"]
 :dependencies [$deps]
 :nrepl {:port 3333}
 :dev-http {8000 "public"}
 :builds {:app {:target :browser
                :output-dir "public/js"
                :js-options {:js-provider :shadow}
                :compiler-options {:optimizations :simple}
                :modules {:main {:init-fn ${ns}/main}}}}}
EOF
}

server-project() {
ns=$(runclj-meta $filepath :ns)
deps=$(runclj-meta $filepath :deps 2>/dev/null)
cat <<EOF
{:source-paths ["src/main"]
 :dependencies [$deps]
 :nrepl {:port 3333}
 :builds {:app {:target :node-script
                :output-to "public/main.js"
                :output-dir "public"
                :js-options {:js-provider :shadow}
                :compiler-options {:optimizations :simple}
                :main ${ns}/main
}}}
EOF
}

index() {
cat <<EOF
<html>
    <head>
      <meta charset="utf-8">
      <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'/>
    </head>
    <body>
        <div id="app"></div>
        <script src="js/main.js" type="text/javascript" charset="utf-8"></script>
    </body>
</html>
EOF
}

mkdir -p $root/src/main
mkdir -p $root/public

package-json > $root/package.json
if runclj-meta $filepath :browser-mode; then
    index > $root/public/index.html
    browser-project > $root/shadow-cljs.edn
else
    server-project > $root/shadow-cljs.edn
fi
